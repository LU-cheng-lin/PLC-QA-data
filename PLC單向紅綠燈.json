[
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 19.0 seconds, green light blinking 2 seconds, yellow light 3.0 seconds, red light 18.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K190          // T0 = 19.0 seconds (K190 means 19.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K30           // T2 = 3.0 seconds (30 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K180          // T3 = 18.0 seconds (180 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 8.0 seconds, green light blinking 2 seconds, yellow light 5.0 seconds, red light 22.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K80          // T0 = 8.0 seconds (K80 means 8.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K50           // T2 = 5.0 seconds (50 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K220          // T3 = 22.0 seconds (220 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 11.0 seconds, green light blinking 2 seconds, yellow light 4.0 seconds, red light 13.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K110          // T0 = 11.0 seconds (K110 means 11.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K40           // T2 = 4.0 seconds (40 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K130          // T3 = 13.0 seconds (130 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 5.0 seconds, green light blinking 2 seconds, yellow light 5.0 seconds, red light 14.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K50          // T0 = 5.0 seconds (K50 means 5.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K50           // T2 = 5.0 seconds (50 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K140          // T3 = 14.0 seconds (140 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 9.0 seconds, green light blinking 2 seconds, yellow light 5.0 seconds, red light 25.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K90          // T0 = 9.0 seconds (K90 means 9.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K50           // T2 = 5.0 seconds (50 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K250          // T3 = 25.0 seconds (250 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 7.0 seconds, green light blinking 2 seconds, yellow light 5.0 seconds, red light 18.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K70          // T0 = 7.0 seconds (K70 means 7.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K50           // T2 = 5.0 seconds (50 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K180          // T3 = 18.0 seconds (180 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 20.0 seconds, green light blinking 2 seconds, yellow light 4.0 seconds, red light 15.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K200          // T0 = 20.0 seconds (K200 means 20.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K40           // T2 = 4.0 seconds (40 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K150          // T3 = 15.0 seconds (150 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 16.0 seconds, green light blinking 2 seconds, yellow light 3.0 seconds, red light 21.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K160          // T0 = 16.0 seconds (K160 means 16.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K30           // T2 = 3.0 seconds (30 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K210          // T3 = 21.0 seconds (210 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 8.0 seconds, green light blinking 2 seconds, yellow light 3.0 seconds, red light 18.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K80          // T0 = 8.0 seconds (K80 means 8.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K30           // T2 = 3.0 seconds (30 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K180          // T3 = 18.0 seconds (180 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "Please use the FX-series PLC instruction list to design traffic light control logic for a one-way road. The red, green, and yellow lights switch in sequence. Assume that pressing X0 starts the system and there is a stop button X1. The timing parameters are: green light 15.0 seconds, green light blinking 2 seconds, yellow light 4.0 seconds, red light 11.0 seconds, and the cycle repeats.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K150          // T0 = 15.0 seconds (K150 means 15.0 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K40           // T2 = 4.0 seconds (40 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K110          // T3 = 11.0 seconds (110 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 23.0 seconds, green light blinking for 2 seconds, yellow light for 11.0 seconds, red light for 6.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K230          // T0 = 23.0 seconds (K230 means 230 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K110           // T2 = 11.0 seconds (110 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K60          // T3 = 6.0 seconds (60 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 22.0 seconds, green light blinking for 2 seconds, yellow light for 11.0 seconds, red light for 8.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K220          // T0 = 22.0 seconds (K220 means 220 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K110           // T2 = 11.0 seconds (110 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K80          // T3 = 8.0 seconds (80 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 21.0 seconds, green light blinking for 2 seconds, yellow light for 12.0 seconds, red light for 8.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K210          // T0 = 21.0 seconds (K210 means 210 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K120           // T2 = 12.0 seconds (120 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K80          // T3 = 8.0 seconds (80 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 20.0 seconds, green light blinking for 2 seconds, yellow light for 10.0 seconds, red light for 4.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K200          // T0 = 20.0 seconds (K200 means 200 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K100           // T2 = 10.0 seconds (100 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K40          // T3 = 4.0 seconds (40 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 18.0 seconds, green light blinking for 2 seconds, yellow light for 12.0 seconds, red light for 7.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K180          // T0 = 18.0 seconds (K180 means 180 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K120           // T2 = 12.0 seconds (120 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K70          // T3 = 7.0 seconds (70 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 16.0 seconds, green light blinking for 2 seconds, yellow light for 10.0 seconds, red light for 2.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K160          // T0 = 16.0 seconds (K160 means 160 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K100           // T2 = 10.0 seconds (100 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K20          // T3 = 2.0 seconds (20 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 21.0 seconds, green light blinking for 2 seconds, yellow light for 11.0 seconds, red light for 1.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K210          // T0 = 21.0 seconds (K210 means 210 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K110           // T2 = 11.0 seconds (110 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K10          // T3 = 1.0 seconds (10 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 20.0 seconds, green light blinking for 2 seconds, yellow light for 14.0 seconds, red light for 1.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K200          // T0 = 20.0 seconds (K200 means 200 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K140           // T2 = 14.0 seconds (140 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K10          // T3 = 1.0 seconds (10 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 16.0 seconds, green light blinking for 2 seconds, yellow light for 10.0 seconds, red light for 1.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K160          // T0 = 16.0 seconds (K160 means 160 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K100           // T2 = 10.0 seconds (100 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K10          // T3 = 1.0 seconds (10 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to design a one-way traffic light system using Mitsubishi FX-series PLC (IL instruction list mode)? The system is started by button X0 and stopped by X1, with the sequence: green light for 16.0 seconds, green light blinking for 2 seconds, yellow light for 12.0 seconds, red light for 3.0 seconds, and then cycles again.",
        "answer": "LD X000              // Start button\nOR M0\nANI X001             // Stop button\nOUT M0               // System start flag\n\nLD M0\nANI T3               // Ensure the next timer has not reached\nOUT T0 K160          // T0 = 16.0 seconds (K160 means 160 x 100ms)\nANI T0\nOUT M1               // M1 = Green light phase\n\nLD T0\nOUT T1 K20           // T1 = 2 seconds (20 x 100ms)\nANI T1\nOUT M2               // M2 = Green light blinking phase\n\nLD T1\nOUT T2 K120           // T2 = 12.0 seconds (120 x 100ms)\nANI T2\nOUT M3               // M3 = Yellow light phase\n\nLD T2\nOUT T3 K30          // T3 = 3.0 seconds (30 x 100ms)\nOUT M4               // M4 = Red light phase\n\nLD M1\nLD M2\nAND M8013            // Blinking pulse (M8013)\nORB                  // OR B used to combine two logics\nOUT Y000             // Green light output\n\nLD M3\nOUT Y001             // Yellow light output\n\nLD M4\nOUT Y002             // Red light output\n\nEND                  // Program end\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 41 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K41 D0         // Reload 41 seconds\n\nLD M8000\nMPS\nAND> D0 K17        // If D0 > 17, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K10        // D0 > 10\nAND<= D0 K17       // D0 <= 17, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K10       // D0 <= 10, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 49 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K49 D0         // Reload 49 seconds\n\nLD M8000\nMPS\nAND> D0 K19        // If D0 > 19, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K12        // D0 > 12\nAND<= D0 K19       // D0 <= 19, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K12       // D0 <= 12, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 45 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K45 D0         // Reload 45 seconds\n\nLD M8000\nMPS\nAND> D0 K15        // If D0 > 15, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K11        // D0 > 11\nAND<= D0 K15       // D0 <= 15, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K11       // D0 <= 11, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 50 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K50 D0         // Reload 50 seconds\n\nLD M8000\nMPS\nAND> D0 K18        // If D0 > 18, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K13        // D0 > 13\nAND<= D0 K18       // D0 <= 18, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K13       // D0 <= 13, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 39 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K39 D0         // Reload 39 seconds\n\nLD M8000\nMPS\nAND> D0 K16        // If D0 > 16, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K11        // D0 > 11\nAND<= D0 K16       // D0 <= 16, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K11       // D0 <= 11, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 38 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K38 D0         // Reload 38 seconds\n\nLD M8000\nMPS\nAND> D0 K17        // If D0 > 17, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K14        // D0 > 14\nAND<= D0 K17       // D0 <= 17, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K14       // D0 <= 14, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 41 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K41 D0         // Reload 41 seconds\n\nLD M8000\nMPS\nAND> D0 K20        // If D0 > 20, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K11        // D0 > 11\nAND<= D0 K20       // D0 <= 20, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K11       // D0 <= 11, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 43 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K43 D0         // Reload 43 seconds\n\nLD M8000\nMPS\nAND> D0 K17        // If D0 > 17, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K11        // D0 > 11\nAND<= D0 K17       // D0 <= 17, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K11       // D0 <= 11, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 40 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K40 D0         // Reload 40 seconds\n\nLD M8000\nMPS\nAND> D0 K17        // If D0 > 17, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K12        // D0 > 12\nAND<= D0 K17       // D0 <= 17, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K12       // D0 <= 12, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    },
    {
        "question": "How to use Mitsubishi FX-series PLC IL instruction list, through MOV / DECP and other instructions, to implement red, yellow, and green lights switching sequentially on a one-way road? Assume one full cycle is 45 seconds, and define conditions for red, yellow, and green phases. Use D0 for countdown control.",
        "answer": "LD M8000           // Power ON detection bit (Always ON)\nMPS                // Push current logic state to stack\nAND M8013          // 1s pulse, used as timing trigger\nDECP D0            // Countdown (decrease D0 by 1 per scan)\n\nMPP                // Pop stack\nAND< D0 K0         // If D0 < 0, countdown is finished\nMOV K45 D0         // Reload 45 seconds\n\nLD M8000\nMPS\nAND> D0 K19        // If D0 > 19, it's green phase\nOUT Y0             // Green light ON\n\nMRD                // Read top of stack (without popping)\nAND> D0 K10        // D0 > 10\nAND<= D0 K19       // D0 <= 19, it's yellow phase\nOUT Y1             // Yellow light ON\n\nMPP                // Pop top of stack\nAND> D0 K0         // D0 > 0\nAND<= D0 K10       // D0 <= 10, it's red phase\nOUT Y2             // Red light ON\n\nEND                  // End of program\n"
    }
]